version: "3.9"

services:
  notification:
    build: ./notification_module/notification
    container_name: notification
    env_file:
      - notification_module/notification/.env
    expose:
      - 8000
    entrypoint: "sh ./docker-entrypoint.sh"
    depends_on:
      rabbit:
        condition: service_healthy
    profiles: [notify]
    networks:
      default:
      cinema_network:
        ipv4_address: 172.30.1.208
    healthcheck:
      test: [ "CMD-SHELL", 'curl -X GET -s --header "X-Request-Id: 2" http://notification:8000/healthcheck || exit 1' ]
      interval: 30s
      timeout: 10s
      retries: 50
      start_period: 30s

  rabbit:
    build: ./notification_module/rabbitmq
    container_name: rabbitmq
    env_file:
       - ./notification_module/rabbitmq/.env
    ports:
      - 15672:15672 # web
      - 5672:5672 #amqp
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    profiles: [notify]
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  aggregator:
    build: ./notification_module/aggregator
    container_name: aggregator
    env_file:
      - notification_module/aggregator/.env
    profiles: [notify]
    depends_on:
      rabbit:
        condition: service_healthy

  email-worker:
    build: ./notification_module/email_worker
    container_name: email-worker
    env_file:
      - notification_module/email_worker/.env
    depends_on:
      rabbit:
        condition: service_healthy
      aggregator:
        condition: service_started
    profiles: [notify]
  
  mongo-notify-db:
    container_name: mongo-notify-db
    image: mongo
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_notify_volume:/data/db
    profiles: [notify]

  websocket-worker:
    build: ./notification_module/websocket_worker
    container_name: websocket-worker
    env_file:
      - notification_module/websocket_worker/.env
    entrypoint: "sh ./docker-entrypoint.sh"
    # ports:
    #   - "8020:8000"
    profiles: [notify]
    networks:
      default:
      cinema_network:
        ipv4_address: 172.30.1.210
    depends_on:
      rabbit:
        condition: service_healthy
      aggregator:
        condition: service_started

  admin-template:
    build: ./notification_module/admin_template
    container_name: admin_template
    env_file:
      - notification_module/admin_template/.env
    restart: 'always'
    # ports:
    #   - "8000:8000"
    depends_on:
      mongo-notify-db:
        condition: service_started
      auth:
        condition: service_healthy
      celery:
        condition: service_started
      rabbit:
        condition: service_healthy
    entrypoint: "sh ./docker-entrypoint.sh"
    profiles: [notify]
    networks:
      default:
      cinema_network:
        ipv4_address: 172.30.1.209
    healthcheck:
      test: [ "CMD-SHELL", 'curl -X GET --header "X-Request-Id: 24" -s http://admin-template:8000/healthcheck || exit 1' ]
      interval: 30s
      timeout: 10s
      retries: 50
      start_period: 30s

  celery:
    restart: "always"
    build: notification_module/admin_template/
    command: bash -c "celery -A schedule.celery worker --scheduler redbeat.RedBeatScheduler -E -B -l info --concurrency=2"
    profiles: [notify]
    depends_on:
      notification:
        condition: service_healthy
      redis-notify:
        condition: service_healthy
    env_file:
      - ./notification_module/admin_template/.env
    links:
      - rabbit

  redis-notify:
    image: redis:7.2.3
    container_name: redis-notify
    volumes:
      - redis_notify_volume:/data
    restart: always
    expose:
      - "6379"
    profiles: [notify]
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  smtp-server:
    image: mailhog/mailhog:v1.0.1
    profiles: [notify]
    expose:
      - "1025" # smtp
      - "8025" # web

volumes:
  rabbitmq:
  redis_notify_volume:
  mongo_notify_volume:
